name: Build and Test Docker Image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore PoolGame.WebAPI/PoolGame.WebAPI.csproj

      - name: Build project
        run: dotnet build PoolGame.WebAPI/PoolGame.WebAPI.csproj --configuration Release --no-restore

      

      - name: Build Docker image
        run: docker build -t poolgame-api:latest -f PoolGame.WebAPI/Dockerfile .

      # Optional: Push Docker image (see next step)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag Docker image
        run: docker tag poolgame-api:latest rishaviq/poolgame-api:latest

      - name: Push Docker image
        run: docker push rishaviq/poolgame-api:latest